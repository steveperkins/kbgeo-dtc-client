<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security4.2.xsd">
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
 	<util:properties id="propertyConfigurer" location="classpath:application.properties"/>
	<context:property-placeholder properties-ref="propertyConfigurer" />

	<mvc:annotation-driven />
    <task:annotation-driven />
    
    <bean id="contentNegotiationManager"
             class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="favorPathExtension" value="false" />
	    <!-- <property name="favorParameter" value="true" /> -->
	    <!-- <property name="parameterName" value="mediaType" /> -->
	    <!-- <property name="ignoreAcceptHeader" value="true"/> -->
	    <property name="useJaf" value="false"/>
	    <property name="defaultContentType" value="application/json" />
	 
	    <property name="mediaTypes">
	        <map>
	            <entry key="json" value="application/json" />
	            <entry key="xml" value="application/xml" />
	       </map>
	    </property>
	</bean>
	
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <context:component-scan base-package="com.kbs.biz" />
    

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.user}" />
        <property name="password" value="${db.password}" />
    </bean>
    
    <bean id="apiDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.api.driver}" />
        <property name="url" value="${db.api.url}" />
        <property name="username" value="${db.api.user}" />
        <property name="password" value="${db.api.password}" />
    </bean>
    
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"></bean>

	<!-- OHHHHH I HATE CORS -->
	<mvc:cors>
	    <mvc:mapping path="/**"
	        allowed-origins="*"
	        allowed-headers="Content-Type, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Authorization, X-Requested-With, requestId, Correlation-Id, kb-auth-token"
	        allowed-methods="GET, PUT, POST, DELETE, OPTIONS"/>
	</mvc:cors>

    <!-- Security filters referenced by web.xml -->
    <!-- application.properties properties are pulled in here so they can be injected with @Resource -->
    <bean id="environment" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${environment}"/>
    </bean>
    
    <bean id="http.cors.access.control.allow.credentials" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${http.cors.access.control.allow.credentials}"/>
    </bean>
    <bean id="http.cors.access.control.allow.origin" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${http.cors.access.control.allow.origin}"/>
    </bean>
    <bean id="http.cors.access.control.allow.headers" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${http.cors.access.control.allow.headers}"/>
    </bean>
    
    <bean id="mailSmtpAuth" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.smtp.auth}"/>
    </bean>
    <bean id="mailSmtpHost" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.smtp.host}"/>
    </bean>
    <bean id="mailSmtpPort" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.smtp.port}"/>
    </bean>
    <bean id="mailSmtpSocketFactoryClass" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.smtp.socketFactory.class}"/>
    </bean>
    <bean id="mailSmtpSocketFactoryFallback" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.smtp.socketFactory.fallback}"/>
    </bean>
    <bean id="mailSmtpSocketFactoryPort" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.smtp.socketFactory.port}"/>
    </bean>
    <bean id="mailSmtpStartsslEnable" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.smtp.startssl.enable}"/>
    </bean>
    <bean id="mailSslFactory" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.sslfactory}"/>
    </bean>
    <bean id="mailAddressBilling" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.address.billing}"/>
    </bean>
    <bean id="mailPasswordBilling" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.password.billing}"/>
    </bean>
    <bean id="mailAddressNotification" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.address.notification}"/>
    </bean>
    <bean id="mailPasswordNotification" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.password.notification}"/>
    </bean>
    <bean id="mailSparkpostKey" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.sparkpost.key}"/>
    </bean>
    <bean id="mailSparkpostFrom" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.sparkpost.from}"/>
    </bean>
    <bean id="mailSparkpostUrl" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${mail.sparkpost.url.base}"/>
    </bean>
</beans>