<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
 	<util:properties id="propertyConfigurer" location="classpath:application.properties"/>
	<context:property-placeholder properties-ref="propertyConfigurer" />

	<mvc:annotation-driven />
    <task:annotation-driven />
    
    <bean id="contentNegotiationManager"
             class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="favorPathExtension" value="false" />
	    <property name="useJaf" value="false"/>
	    <property name="defaultContentType" value="application/json" />
	 
	    <property name="mediaTypes">
	        <map>
	            <entry key="json" value="application/json" />
	            <entry key="xml" value="application/xml" />
	       </map>
	    </property>
	</bean>
	
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <context:component-scan base-package="com.kbs.biz" />
    

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.user}" />
        <property name="password" value="${db.password}" />
    </bean>
    
    <!-- application.properties properties are pulled in here so they can be injected with @Resource -->
    <bean id="http.cors.access.control.allow.credentials" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${http.cors.access.control.allow.credentials}"/>
    </bean>
    <bean id="http.cors.access.control.allow.origin" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${http.cors.access.control.allow.origin}"/>
    </bean>
    <bean id="http.cors.access.control.allow.headers" class="java.lang.String">
    	<constructor-arg type="java.lang.String" value="${http.cors.access.control.allow.headers}"/>
    </bean>
</beans>